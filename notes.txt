
REST API
----------
http://localhost:8000/

GET
    /                     : list of projects
    /new                  : form for creating new project

    /project/             : home page of project
    /project/issue/[list] : list of issues
        optional query string :
        search=text
        sort=id+title-owner : id ascending, then title ascending, then owner descending
        colspec=Stars+ID+Type+Status+Priority+Owner+Summary
            list of columns shown
        filter=label:v1.0+status:open+cc:yyyyyyyyyyyuuuu
            select issues after the values of their fields
        
    /project/issue/N      : details of issue N
    /project/issue/search : search form
    /project/issue/new    : form for adding a new issue

    ? question here : are users global to all projects or local per project?
    /user/John Smith : details of user John Smith
    /login           : login form

    /project/structure    : form for modifying database structure
        add/delete fields
        add/delete values in predefined lists

    /projet/msg/1234  : display message 1234

POST
    /project              : create new project
    /project/issue/new    : add new issue
    /project/issue/N      : modify issue N
    /project/structure    : modify database structure

    /project/msg/1234
        status=dead       : in this status, the message will not be shown
        status=alive

    /login
        user=
        password=
        result: list of projects
    /user/John Smith : modify user John Smith's details



--
erl -pa ~/erlang-sqlite3/ebin
1> sqlite3:open(db, [{file, "tke/db"}]).
{ok,<0.35.0>}
2> sqlite3:open(db, [{file, "tke/db"}]).
{error,{already_started,<0.35.0>}}


---

4> proplists:get_value( columns, L).
["rowid","title","owner","status"]
6> proplists:get_value( rows, L).      
[{1,<<"critical error should be simple error">>,1,1},
 {2,<<"typo in comment">>,1,1},
 {3,<<"Serious slow-down at startup">>,1,1},
 {4,<<"empty plc database">>,1,1}]


---

how to distinguish html rendering, erlang, xml, csv, json ?
how the client should indicate its choice ?
    ?format=cvs ?format=xml etc.


-- user authentication

GET
    /sessions/new

POST
    /sessions/new

DELETE
    /sessions/<session-id>


Login HTML page 


Install
--------

$TKE_ROOT/
    erlang
    yaws

$TKE_DATA/ # contains projects and configuration
           # everything that needs to be backuped
    yaws.conf
    users configuration
    projects
    depends on $TKE_ROOT/
    


